@page "/search-results/{query}"
@inject HttpClient Http
@using music_manager_starter.Shared
@inject IJSRuntime JSRuntime

@inject NavigationManager Navigation

<h3 class="text-white text-3xl mb-4">Search Results for "@query"</h3>

@if (songs == null)
{
    <p class="text-gray-400">Loading search results...</p>
}
else if (songs.Count == 0)
{
    <p class="text-gray-400">No songs found for "@query".</p>
}
else
{
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
    @foreach (var song in songs)
    {
        <div @onclick="() => NavigateSong(song.Id)" class="bg-gray-100 p-4 rounded-lg shadow-md transition-transform transform hover:scale-105 hover:bg-gray-200">
            @if (!string.IsNullOrEmpty(song.ImageMimeType) && song.ImageData != null)
            {
                <img src="data:@song.ImageMimeType;base64,@Convert.ToBase64String(song.ImageData)" 
                     alt="@song.Title" 
                     class="w-full h-40 object-cover rounded-lg mb-4" />
            }
            <h4 class="text-black font-bold text-lg">@song.Title</h4>
            <p class="text-gray-600 text-sm"><strong>Artist:</strong> @song.Artist</p>
            <p class="text-gray-600 text-sm"><strong>Album:</strong> @song.Album</p>
            <p class="text-gray-600 text-sm"><strong>Genre:</strong> @song.Genre</p>
        </div>
    }
</div>

}

<button class="mt-6 bg-red-500 text-white px-4 py-2 rounded" @onclick="GoBack">
    Back
</button>

@code {
    [Parameter] public string query { get; set; }
    private List<Song>? songs;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            songs = await Http.GetFromJsonAsync<List<Song>>($"api/songs/search?query={Uri.EscapeDataString(query)}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading search results: {ex.Message}");
            songs = null;
        }
    }

    private async Task GoBack()
    {
        await JSRuntime.InvokeVoidAsync("history.back");
    }

    private void NavigateSong(Guid songId)
    {
        // Navigating to detailed song page passing song ID
        Navigation.NavigateTo($"/song-details/{songId}");
    }
}
