@page "/"
@using music_manager_starter.Shared
@inject HttpClient Http
@inject NavigationManager Navigation // Inject NavigationManager

@code {
    private List<Song> songs;
    private string uploadMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        songs = await Http.GetFromJsonAsync<List<Song>>("api/songs");
    }

    private async Task FileUpload(InputFileChangeEventArgs e, Song song)
    {
        var file = e.File;

        if (file != null)
        {
            // Restrict to image files
            if (!file.ContentType.StartsWith("image/"))
            {
                uploadMessage = "Only image files are allowed!";
                Console.WriteLine($"Hello: '{uploadMessage}' ");
                return;
            }

            // Process the file
            uploadMessage = $"File '{file.Name}' uploaded successfully!";
            Console.WriteLine($"File uploaded for song '{song.Title}': {file.Name}, Size: {file.Size} bytes");

            // Save the file (e.g., as binary data)
            using var stream = file.OpenReadStream();
            using var memoryStream = new MemoryStream();
            await stream.CopyToAsync(memoryStream);



            // Update the song with the image
            song.ImageData = memoryStream.ToArray();
            song.ImageMimeType = file.ContentType;


            // Updating Server
           // await Http.PostAsJsonAsync("api/songs", song);

           
        }
    }

}

<div class="p-0 min-h-screen bg-pattern flex flex-col items-center justify-center">
    <h2 class="text-3xl font-bold text-white mb-8 text-center">Song Library</h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8">
        @if (songs != null && songs.Count > 0)
        {
            @foreach (var song in songs)
            {
                <div @onclick="() => NavigateSong(song.Id)" 
                     class="glass p-6 border border-gray-300 rounded-lg text-white transition-transform transform hover:scale-105 hover:shadow-xl cursor-pointer">
                    <h3 class="text-xl font-semibold mb-2">@song.Title</h3>
                    <p class="text-md">Artist: <span class="font-light">@song.Artist</span></p>
                    @if (song.ImageData != null)
                    {
                        <img src="data:@song.ImageMimeType;base64,@Convert.ToBase64String(song.ImageData)" 
                             alt="@song.Title" 
                             class="w-48 h-48 object-cover rounded-lg mb-4" />
                    }
                    <InputFile OnChange="@(e => FileUpload(e, song))" 
                        @onclick:stopPropagation="true" />
                </div>
            }
        }
        else
        {
            <div class="col-span-1 text-center text-gray-400">No songs found.</div>
        }
    </div>
</div>

@code {
    //[Inject]
    //private NavigationManager Navigation { get; set; } // Inject NavigationManager

    private void NavigateSong(Guid songId)
    {
        // Navigate to the detailed song page, passing the song ID
        Navigation.NavigateTo($"/song-details/{songId}");
    }
}



<style>    
    .bg-pattern {
        background: linear-gradient( rgba(31, 41, 55, 0.7), rgba(31, 41, 55, 0.7) ), url('dalle.webp');
        background-size: cover;
        background-position: center;
        font-family: 'Rajdhani', sans-serif;
    }

 

    .glass {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px); 
        border-radius: 10px; 
        position: relative; 
        overflow: hidden; 
    }

        .glass:before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            border: 2px solid rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            pointer-events: none; 
        }
</style>